#!/bin/bash

#echo 'dotfiles - Environment bootstrapper - Tim Brooks - http://skoorb.net'

path=`pwd -L`

# Set some default values
action="help"
file="foo"
extra_opts=""

# Loop over cmd line tokens
a=$@
while true; do
  b=${a%% *}
  a=${a#* }

  if [ "$b" == "sync" -o "$b" == "pull" -o "$b" == "push" ]; then
    action=$b
  elif [ "$b" == "add" ]; then
    action=$b
    c=${a%% *}
    a=${a#* }
    file=$c
  elif [ "$b" == "-o" -o "$b" == "--overwrite" ]; then
    overwrite=true
  elif [ "$b" == "-q" -o "$b" == "--quiet" ]; then
    quiet=true
  elif [ "$b" == "-d" -o "$b" == "--dryrun" ]; then
    dryrun=true
  elif [ "$b" == "-e" -o "$b" == "--executable" ]; then
    executable=true
  elif [ "$b" == "-c" -o "$b" == "--compare" ]; then
    compare=true
  else
    extra_opts+=" "$b
  fi

  if [ "$a" == "$b" -o "$a" == "$c" ]; then
    break
  fi
done

function action () {
    if [ $dryrun ]; then
        log skipping action $@
    else
        log $@
        eval $@
    fi
}

function log () {
    if [ ! $quiet ]; then
        echo $@
    fi
}

function link () {
    target_path=$1
    link_path=$2
    if [ -L $link_path ]; then
         log $link_path linked
    elif [ -e $link_path ]; then
        if [ $overwrite ]; then
            log overwriting $link_path
            action rm -rf $link_path
            action ln -s $target_path $link_path
        elif [ $compare ]; then
            diff -s $target_path $link_path
        else
            log pre-existing $link_path
        fi
    else
        action ln -s $target_path $link_path
    fi
}

if [ "$action" == "help" ]; then
    echo "${0##*/} - Tim Brooks <brooks@skoorb.net>"
    echo "Usage: dotfiles <action> -[cdeoq]"
    echo "Actions: help - this help message"
    echo "         pull - pull updates from attached repos"
    echo "         push - push updates to attached repos"
    echo "         sync - sync dotfiles to this repo"
    echo "         add - add a dotfile to this repo"
fi

if [ "$action" == "push" ]; then
    cd ~/.dotfiles
    action git commit -am "\"File update\""
    remotes=$(git remote)
    for remote in $remotes; do
        action git push $remote
    done
fi

if [ "$action" == "pull" ]; then
    cd ~/.dotfiles
    action git pull
fi

if [ "$action" == "sync" ]; then
    targets=$(cd ~/.dotfiles; ls -A home)
    for target in ${targets}; do
        target_path=~/.dotfiles/home/${target}
        link_path=~/${target}
        link $target_path $link_path
    done

    if [ ! -d "`echo ~/bin`" ]; then
        action mkdir ~/bin
    fi
    targets=$(cd ~/.dotfiles; ls bin)
    for target in ${targets}; do
        target_path=~/.dotfiles/bin/${target}
        link_path=~/bin/${target}
        link $target_path $link_path
    done
fi

if [ "$action" == "add" ]; then
    file_name=${file##*/}
    if [ $executable ]; then
        loc="bin"
    else
        loc="home"
    fi
    cd ~/.dotfiles
    action mv ${file} ~/.dotfiles/${loc}/${file_name}
    action git add ~/.dotfiles/${loc}/${file_name}
    action git commit -m "\"Added ${loc}/${file_name}\""
fi

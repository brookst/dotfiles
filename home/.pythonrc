#!/usr/bin/python
# Add auto-completion and a stored history file of commands to your Python
# interactive interpreter. Requires Python 2.0+, readline. Autocomplete is
# bound to the Esc key by default (you can change it - see readline docs).
#
# Store the file in ~/.pystartup, and set an environment variable to point
# to it, e.g. "export PYTHONSTARTUP=/max/home/itamar/.pystartup" in bash.
#
# Note that PYTHONSTARTUP does *not* expand "~", so you have to put in the
# full path to your home directory.

from __future__ import division
import atexit
import os
import readline
import rlcompleter
from math import *
try: # Pint throws an exception under python2.6
    from pint import UnitRegistry
except Exception:
    pass
else:
    u = UnitRegistry(os.path.join(os.getenv("HOME"), "units.txt"))
    q = u.Quantity

HISTORYPATH = os.path.expanduser("~/.pyhistory")
HISTORYTMP = os.path.expanduser("~/.pyhisttmp.py")

ENDMARKERSTR = "# # # histDUMP # # #"

SAVEMACRO = "import readline; readline.write_history_file('"+HISTORYTMP+"'); \
    print('####>>>>>>>>>>'); print(''.join(list(filter(lambda lineP: not lineP.strip().endswith('"+ENDMARKERSTR+"'), open('"+HISTORYTMP+"').readlines()))[:-1])+'####<<<<<<<<<<')"

readline.parse_and_bind('tab: complete')
readline.parse_and_bind(r'\C-w: "'+SAVEMACRO+'"')

def save_history(history_path=HISTORYPATH, endmarker_str=ENDMARKERSTR):
    from readline import write_history_file
    write_history_file(history_path)
    # Now filter out those line containing the SAVEMACRO
    lines = filter(lambda lineP, endmarker_str=endmarker_str:
                   not lineP.strip().endswith(endmarker_str),
                   open(history_path).readlines())
    open(history_path, 'w+').write(''.join(lines))

if os.path.exists(HISTORYPATH):
    readline.read_history_file(HISTORYPATH)

atexit.register(save_history)

del os, atexit, readline, rlcompleter, save_history, HISTORYPATH
del HISTORYTMP, ENDMARKERSTR, SAVEMACRO

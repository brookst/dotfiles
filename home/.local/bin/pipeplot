#!/bin/bash

_author="Tim Brooks <brooks@skoorb.net> 2015"
_name=$(basename "$0")

usage () {
    if [ "$1" == 0 ]; then
    echo "${_name} - ${_author}"
    fi
    echo "Usage: echo data | ${_name} [options]"
    echo "Auto update git repo"
    echo
    echo "Options:"
    echo "  -h, --help              this help message"
    echo "  -s, --store=FILE        store data to FILE"
    echo "  -o, --options=OPTIONS   gnuplot options"
    echo "  -p, --plot=OPTIONS      gnuplot plot command"
    exit "$1"
}

VERBOSE=0
PLOT=( )

# Execute getopt
if ! ARGS=$(getopt -o hvs:o:p: -l "help,verbose,store:,options:,plot:" -n "getopt.sh" -- "$@"); then
  usage 1
fi

eval set -- "$ARGS"

while true; do
  case "$1" in
    -s|--store)
      shift;
      FILE=$1
      shift;
      ;;
    -p|--plot)
      shift;
      PLOT+=("$1")
      shift;
      ;;
    -o|--options)
      shift;
      OPTIONS+=("$1")
      shift;
      ;;
    -v|--verbose)
      shift;
      VERBOSE=$((VERBOSE+1));
      ;;
    -h|--help)
      usage 0;
      ;;
    --)
      shift
      break
      ;;
  esac
done
[ $VERBOSE -gt 2 ] && echo " pp: \$VERBOSE = ${VERBOSE}"

DATA=${FILE-$(mktemp)}
PLOT=${PLOT-"1:2"}
GNUPLOT=${TMPDIR-/tmp}/$$.gnuplot-pipe
[ $VERBOSE -gt 2 ] && echo " pp: \$DATA = ${DATA}"
[ $VERBOSE -gt 2 ] && echo " pp: \$PLOT = ${PLOT}"
[ $VERBOSE -gt 2 ] && echo " pp: \$GNUPLOT = ${GNUPLOT}"
mkfifo "$GNUPLOT"
[ -f "${DATA}" ] || touch "$DATA"

script="plot '$DATA' using ${PLOT[0]}"
for arg in "${PLOT[@]:1}"; do
    script+=", '$DATA' using ${arg}"
done

# Read in the first few data points
while [ "$(wc -l "$DATA" | awk '{print $1}')" -lt 2 ]; do
    [ $VERBOSE -gt 2 ] && echo " pp: plot"
    IFS= read line
    [ -n "$line" ] && echo "$line" >> "$DATA"
    [ $VERBOSE -gt 1 ] && echo " pp: reading: $line"
done

gnuplot -p <"$GNUPLOT" &
pid=$!
exec 3>"$GNUPLOT"
for option in "${OPTIONS[@]}"; do
    echo "$option" >&3
    [ $VERBOSE -gt 2 ] && echo " pp: option $option"
done
echo "$script" >&3
[ $VERBOSE -gt 2 ] && echo " pp: option $script"
sleep .1s

running=1
trap 'running=0' SIGINT

head "$DATA"
while read line && [ "$running" -eq 1 ]; do
    echo "$line" >> "$DATA"
    [ $VERBOSE -gt 0 ] && echo " pp: reading: $line"
    echo "replot" >&3
    sleep 0.005s
done

exec 3>&-
pid=$(ps | awk '/gnuplot_qt/{ print $1; exit }')

running=1
while kill -0 "$pid" &>/dev/null && [ "$running" -eq 1 ]; do
    printf "waiting on pid: %s -\r" "$pid"
    sleep 0.5
    printf "waiting on pid: %s |\r" "$pid"
    sleep 0.5
done
kill "$pid" &>/dev/null
rm "$GNUPLOT"
[ -z "$FILE" ] && rm "$DATA"

exit 0

#!/bin/bash

usage () {
    if [ "$1" == 0 ]; then
    echo "${_name} - Tim Brooks 2015 <brooks@skoorb.net>"
    fi
    echo "Usage: echo data | ${_name} [options]"
    echo "Auto update git repo"
    echo
    echo "Options:"
    echo "  -h, --help              this help message"
    echo "  -s, --store=FILE        store data to FILE"
    echo "  -o, --options=OPTIONS   gnuplot options"
    echo "  -p, --plot=OPTIONS      gnuplot plot command"
    exit "$1"
}

# Execute getopt
if ! ARGS=$(getopt -o hs:o:p: -l "help,store:,options:,plot:" -n "getopt.sh" -- "$@"); then
  usage 1
fi

eval set -- "$ARGS"

while true; do
  case "$1" in
    -s|--store)
      shift;
      FILE=$1
      shift;
      ;;
    -p|--plot)
      shift;
      PLOT+=("$1")
      shift;
      ;;
    -o|--options)
      shift;
      OPTIONS+=("$1")
      shift;
      ;;
    -h|--help)
      usage 0;
      ;;
    --)
      shift
      break
      ;;
  esac
done

DATA=${FILE-$(mktemp)}
PLOT=${PLOT-"1:2"}
GNUPLOT=${TMPDIR-"/tmp"}/$$.gnuplot-pipe
mkfifo "$GNUPLOT"
[ -f "${DATA}" ] || touch "$DATA"

script="plot '$DATA' using ${PLOT[0]}"
for arg in "${PLOT[@]:1}"; do
    script+=", '$DATA' using ${arg}"
done

# Read in the first few data points
while [ "$(wc -l "$DATA" | awk '{print $1}')" -lt 2 ]; do
    IFS= read line
    [ -n "$line" ] && echo "$line" >> "$DATA"
done

gnuplot -p <"$GNUPLOT" &
pid=$!
exec 3>"$GNUPLOT"
for option in "${OPTIONS[@]}"; do
    echo "$option" >&3
done
echo "$script" >&3
sleep .1s

running=1
trap 'running=0' SIGINT

head "$DATA"
while read line && [ "$running" -eq 1 ]; do
    echo "$line" >> "$DATA"
    echo "$line"
    echo "replot" >&3
    sleep .5s
done

exec 3>&-
rm "$GNUPLOT"
[ -z "$FILE" ] && rm "$DATA"
pid=$(ps | awk '/gnuplot_qt/{ print $1; exit }')

running=1
while kill -0 "$pid" &>/dev/null && [ "$running" -eq 1 ]; do
    sleep 0.1
done
kill "$pid" &>/dev/null

exit 0

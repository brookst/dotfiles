#!/bin/bash

ACTION=$(basename "$0")
usage () {
    echo "    ${ACTION} [-r] [ls] ITEM#"
    echo "      Move ITEM into ${ACTION} list or vice versa with -r"
    echo "      ls lists the ${ACTION} list"
    echo ""
    exit "$1"
}

err () {
    echo "$ACTION: error - $1" 1>&2
    usage 1
}

is () {
#Do a bunch of comparisons; e.g. 'is bravo in alfa,bravo,charlie'
    [ "$2" == "in" ] || exit 1
    for cmp in $(echo "$3"|tr ',' ' '); do
        [ "$1" == "$cmp" ] && return 0
    done
    return 1
}

reverse=false
debug=false
dry=false
task=()
while [ $# -gt 0 ]; do
    case $1 in
    -h|--help) echo "Usage:"; usage 0;;
    usage) usage 0;;
    ${ACTION}) ;;
    ls) task="ls";;
    -d|--debug) debug=true;;
    --dry) dry=true;;
    -r) reverse=true;;
    -*) err "unrecognised option $1";;
    *) task+=($1);;
    # *) [ -z "$task" ] || err "too many arguments"; task=$1;;
    esac
    shift
done

# action=$1
# [ "$task" = "usage" ] && usage 0
# shift
# task=$1
run () {
    if $dry; then
        echo "$1"
    else
        eval "$1"
    fi
}

debug () {
    if $debug; then
        while read msg; do
            echo "$msg"
        done
    fi
}

lists="ls,list,lsa,listall"

#Print usage if there is no task or default
[ -z "${task[0]}" ] && ! is "$TODOTXT_DEFAULT_ACTION" in $lists && echo "Usage:" && usage 0

#Move tasks to/from the $ACTION list
move () {
    if $reverse; then
        echo "mv $1 todo.txt ${ACTION}.txt" | debug
        run "TODOTXT_FORCE=1 $TODO_FULL_SH mv $1 ${TODO_FILE##*/} ${ACTION}.txt"
        return $?
    else
        echo "mv $1 ${ACTION}.txt todo.txt" | debug
        run "TODOTXT_FORCE=1 $TODO_FULL_SH mv $1 ${ACTION}.txt"
        return $?
    fi
}

echo "task: ${task[@]}" | debug

if [ "${task[0]}" -gt 0 ] &>/dev/null; then
    for t in "${task[@]}"; do
        echo "Moving task ${t}" | debug
        if [ "$t" -gt 0 ] &>/dev/null; then
            if ! move $t; then
                exit $?
            fi
        else
            echo "Error - task ${t} is invalid"
            exit 1
        fi
    done
    exit 0
fi

#Print the $ACTION list
if [ "${task[0]}" = "ls" ]; then
    echo "ls ${ACTION}.txt ${task[1]}" | debug
    $TODO_FULL_SH listfile "${ACTION}.txt" ${task[1]}
    exit $?
elif is "$TODOTXT_DEFAULT_ACTION" in $lists ; then
    echo "ls ${ACTION}.txt ${task[@]}" | debug
    $TODO_FULL_SH listfile "${ACTION}".txt "${task[@]}"
    exit $?
else
    err "Unrecognised parameter - ${task[0]}"
fi

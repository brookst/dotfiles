#!/bin/bash

#echo 'dotfiles - Environment bootstrapper - Tim Brooks - http://skoorb.net'

path=`pwd -L`

# Set some default values
action="help"
file="foo"
extra_opts=""

# Execute getopt
ARGS=$(getopt -o m:oqvdec -l "message:,overwrite,quiet,verbose,dryrun,executable,compare" -n "getopt.sh" -- "$@");

# Bad arguments
if [ $? -ne 0 ];
then
  exit 1
fi

eval set -- "$ARGS";

while true; do
  case "$1" in
    -m|--message)
      shift;
      if [ -n "$1" ]; then
        message=$1
        shift;
      fi
      ;;
    -o|--overwrite)
      shift;
      overwrite=true
      ;;
    -q|--quiet)
      shift;
      quiet=true
      ;;
    -v|--verbose)
      shift;
      verbose=true
      ;;
    -d|--dryrun)
      shift;
      dryrun=true
      ;;
    -e|--executable)
      shift;
      executable=true
      ;;
    -c|--compare)
      shift;
      compare=true
      ;;
    --)
      shift;
      break;
      ;;
  esac
done

# Loop over cmd line tokens
a=$@
while true; do
  b=${a%% *}
  a=${a#* }

  if [ "$b" == "sync" -o "$b" == "pull" -o "$b" == "push" -o "$b" == "diff" -o "$b" == "status" ]; then
    action=$b
  elif [ "$b" == "add" ]; then
    action=$b
    c=${a%% *}
    a=${a#* }
    file=$c
  else
    extra_opts+=" "$b
  fi

  if [ "$a" == "$b" -o "$a" == "$c" ]; then
    break
  fi
done

function action () {
    if [ $dryrun ]; then
        log skipping action $@
    else
        if eval $@; then
            log $@
        else
            warn failed command: $@
        fi
    fi
}

function log () {
    if [ $verbose ]; then
        echo $@
    fi
}

function warn () {
    if [ !$quiet ]; then
        echo Warning $@
    fi
}

function link () {
    target_path=$1
    link_path=$2
    if [ -L $link_path ]; then
        old_path=$(ls -l $link_path)
        old_path=${old_path##* }
        if [ "$old_path" == "$target_path" ]; then
            log $link_path linked
        else
            if [ $overwrite ];then
                log updating link $link_path
                action rm -rf $link_path
                action ln -s $target_path $link_path
            else
                warn pre-existing link $link_path
            fi
        fi
    elif [ -e $link_path ]; then
        if [ $overwrite ]; then
            log overwriting $link_path
            action rm -rf $link_path
            action ln -s $target_path $link_path
        elif [ $compare ]; then
            diff -s $target_path $link_path
        else
            warn pre-existing file $link_path
        fi
    else
        action ln -s $target_path $link_path
    fi
}

if [ "$action" == "help" ]; then
    echo "${0##*/} - Tim Brooks <brooks@skoorb.net>"
    echo "Usage: dotfiles <action> -[cdeoq]"
    echo "Actions: help - this help message"
    echo "         pull - pull updates from attached repos"
    echo "         push - push updates to attached repos"
    echo "         sync - sync dotfiles to this repo"
    echo "         add - add a dotfile to this repo"
fi

if [ "$action" == "push" ]; then
    cd ~/.dotfiles
    action git commit -am "\"$message\""
    remotes=$(git remote)
    branch=$(git rev-parse --abbrev-ref HEAD)
    for remote in $remotes; do
        action git push $remote $branch
    done
fi

if [ "$action" == "sync" ]; then
    targets=$(cd ~/.dotfiles; find home -type f -printf "%P\n")
    for target in ${targets}; do
        target_path=~/.dotfiles/home/${target}
        link_path=~
        for dir in $(echo ${target} | tr '/' ' '); do
            action mkdir -p $link_path
            link_path+=/$dir
        done
        link $target_path $link_path
    done
fi

if [ "$action" == "add" ]; then
    if [ $executable ]; then
        loc="bin"
        file_name=${file##*/}
    else
        loc="home"
        file_name=${file##$HOME/}
        dirs=$(echo $file_name | tr '/' ' ')
    fi
    path=~/.dotfiles/${loc}
    for dir in $dirs; do
        action mkdir -p $path
        path=$path/$dir
    done
    action mv ${file} ~/.dotfiles/${loc}/${file_name}
    cd ~/.dotfiles
    action git add ~/.dotfiles/${loc}/${file_name}
    action git commit -m "\"Added ${loc}/${file_name}\""
fi

if [ "$action" == "diff" -o "$action" == "pull" -o "$action" == "status" ]; then
    cd ~/.dotfiles
    action git $action
fi
